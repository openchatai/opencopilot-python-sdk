# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing
import uuid

import pydantic

from ....core.datetime_utils import serialize_datetime
from .chatbot_status import ChatbotStatus


class Chatbot(pydantic.BaseModel):
    id: uuid.UUID
    name: str
    token: str
    website: str
    status: ChatbotStatus
    prompt_message: str
    enhanced_privacy: bool
    smart_sync: bool
    created_at: dt.datetime
    updated_at: dt.datetime
    deleted_at: dt.datetime
    swagger_url: str
    is_premade_demo_template: bool

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
